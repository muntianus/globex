name: Globex CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  frontend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint --if-present

    - name: Run tests
      run: npm test -- --coverage --watchAll=false

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./frontend/coverage

    - name: Build frontend
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: frontend/build/

  backend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
    - uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov black flake8

    - name: Run linting
      run: |
        black --check .
        flake8 .

    - name: Run tests
      run: |
        pytest --cov=. --cov-report=xml

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./backend

  flutter-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./b2b_marketplace_app

    steps:
    - uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.x'
        channel: 'stable'

    - name: Get dependencies
      run: flutter pub get

    - name: Analyze code
      run: flutter analyze

    - name: Run tests
      run: flutter test --coverage

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./b2b_marketplace_app/coverage

    - name: Build APK
      run: flutter build apk --release

  deploy:
    needs: [frontend-test, backend-test, flutter-test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: Deploy to staging
      run: |
        echo "üöÄ Deploying to staging environment"
        echo "Frontend: Ready for deployment"
        echo "Backend: Ready for deployment"
        echo "Flutter: APK built successfully"

    - name: Notify deployment status
      run: |
        echo "‚úÖ Deployment completed successfully"
        echo "üì± Mobile app: Build ready"
        echo "üåê Web app: Ready for production"
        echo "‚öôÔ∏è API: Backend services ready"