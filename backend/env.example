# =====================================================
# Переменные окружения Backend
# =====================================================
# Скопируйте этот файл в .env и настройте значения
# 
# ВАЖНО: 
# - Никогда не коммитьте .env файлы в систему контроля версий
# - Используйте надежные, уникальные значения в продакшене
# - Перезапустите сервер после изменения переменных окружения
# =====================================================

# =====================================================
# Конфигурация безопасности
# =====================================================

# Секретный ключ для подписи JWT токенов и других криптографических операций
# - ДОЛЖЕН быть надежной, случайной строкой в продакшене
# - Генерировать с помощью: python -c "import secrets; print(secrets.token_urlsafe(32))"
# - Рекомендуется минимум 32 символа
SECRET_KEY=change-me-to-a-strong-random-string

# Время истечения JWT токена в минутах
# - По умолчанию: 30 минут
# - Настройте в зависимости от требований безопасности
ACCESS_TOKEN_EXPIRE_MINUTES=30

# Алгоритм JWT (обычно не изменяется)
ALGORITHM=HS256

# =====================================================
# Конфигурация базы данных
# =====================================================

# URL подключения к базе данных PostgreSQL
# Формат: postgresql://username:password@host:port/database_name
# - Разработка: postgresql://user:password@localhost:5432/globex
# - Docker: postgresql://user:password@db:5432/globex
# - Продакшен: postgresql://user:password@your-db-host:5432/globex
DATABASE_URL=postgresql://user:password@localhost:5432/globex

# Настройки пула соединений с базой данных (опционально)
# DB_POOL_SIZE=10
# DB_MAX_OVERFLOW=20
# DB_POOL_TIMEOUT=30

# =====================================================
# Конфигурация сервера
# =====================================================

# Хост и порт сервера
# - Разработка: 0.0.0.0:8000
# - Продакшен: 0.0.0.0:8000 (или ваш предпочтительный порт)
HOST=0.0.0.0
PORT=8000

# Включить/отключить режим отладки
# - Разработка: true
# - Продакшен: false
DEBUG=true

# Включить/отключить автоперезагрузку (только для разработки)
RELOAD=true

# =====================================================
# Конфигурация CORS
# =====================================================

# Разрешенные источники для CORS (через запятую)
# - Разработка: http://localhost:3000,http://127.0.0.1:3000
# - Продакшен: https://your-frontend-domain.com
CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# =====================================================
# Конфигурация логирования
# =====================================================

# Уровень логирования (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Формат логов (json, text)
LOG_FORMAT=text

# =====================================================
# Внешние сервисы (Опционально)
# =====================================================

# Конфигурация почтового сервиса (если реализуете функции email)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USERNAME=your-email@gmail.com
# SMTP_PASSWORD=your-app-password
# SMTP_USE_TLS=true

# Конфигурация Redis (если используете Redis для кеширования/сессий)
# REDIS_URL=redis://localhost:6379/0

# =====================================================
# Мониторинг и аналитика (Опционально)
# =====================================================

# Sentry DSN для отслеживания ошибок
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Endpoint метрик Prometheus
# ENABLE_METRICS=true
# METRICS_PORT=9090

# =====================================================
# Инструкции по использованию
# =====================================================
# 1. Скопируйте этот файл: cp env.example .env
# 2. Настройте значения для вашего окружения
# 3. Сгенерируйте надежный SECRET_KEY для продакшена
# 4. Обновите DATABASE_URL для указания на вашу базу данных
# 5. Перезапустите сервер: uvicorn main:app --reload
# =====================================================

